{
  "active": false,
  "connections": {
    "When clicking ‘Test workflow’": {
      "main": [
        [
          {
            "node": "Supabase1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Supabase1": {
      "main": [
        [
          {
            "node": "Gmail",
            "type": "main",
            "index": 0
          },
          {
            "node": "Merge",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Gmail": {
      "main": [
        [
          {
            "node": "Edit Fields",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Code": {
      "main": [
        [
          {
            "node": "Merge",
            "type": "main",
            "index": 1
          }
        ]
      ]
    },
    "Edit Fields": {
      "main": [
        [
          {
            "node": "Code",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Merge": {
      "main": [
        [
          {
            "node": "Crypto",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Crypto": {
      "main": [
        [
          {
            "node": "Edit Fields1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Edit Fields1": {
      "main": [
        [
          {
            "node": "Sort",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Sort": {
      "main": [
        [
          {
            "node": "Supabase",
            "type": "main",
            "index": 0
          }
        ]
      ]
    }
  },
  "createdAt": "2024-12-10T15:57:28.357Z",
  "id": "kUYE1LTgH25R8iuG",
  "meta": null,
  "name": "My workflow 3",
  "nodes": [
    {
      "parameters": {},
      "type": "n8n-nodes-base.manualTrigger",
      "typeVersion": 1,
      "position": [
        -80,
        -140
      ],
      "id": "26c78b23-9a96-4cec-883c-160e87cc00c1",
      "name": "When clicking ‘Test workflow’"
    },
    {
      "parameters": {
        "operation": "getAll",
        "tableId": "payee",
        "returnAll": true
      },
      "type": "n8n-nodes-base.supabase",
      "typeVersion": 1,
      "position": [
        80,
        -140
      ],
      "id": "b00613b6-e623-4f66-a532-325a509e8838",
      "name": "Supabase1",
      "credentials": {
        "supabaseApi": {
          "id": "e5AFr32MiJHSJrPC",
          "name": "Supabase account 2"
        }
      }
    },
    {
      "parameters": {
        "operation": "getAll",
        "limit": 100,
        "filters": {
          "q": "subject:\"Interac e-Transfer\" subject:from after:2023/01/01",
          "sender": "={{ $json['first_name'].toUpperCase()}} {{ $json['last_name'].toUpperCase() }}"
        }
      },
      "type": "n8n-nodes-base.gmail",
      "typeVersion": 2.1,
      "position": [
        340,
        180
      ],
      "id": "c997a96b-773c-4fd4-b925-82dfcc9a4940",
      "name": "Gmail",
      "webhookId": "def8eb76-dbbf-42ff-b969-7bfdfbe7d2fc",
      "alwaysOutputData": false,
      "credentials": {
        "gmailOAuth2": {
          "id": "Igxrq6SKGerkDIzN",
          "name": "Gmail account"
        }
      }
    },
    {
      "parameters": {
        "mode": "runOnceForEachItem",
        "jsCode": "const from_sender = $json.From;\nconst date = $json.internalDate;\nconst subject = $json.Subject;\nconst snippet = $json.snippet\n// Regex to match dollar amounts\nconst dollarRegex = /\\$(\\d{1,3}(?:,\\d{3})*(?:\\.\\d{2})?)/;\n// Try to match the dollar amount in the subject\nlet match = subject.match(dollarRegex);\n\n// If not found in the subject, try the snippet\nif (!match) {\n  match = snippet.match(dollarRegex);\n}\n\n// Extract the name and convert to lowercase\nconst name = from_sender.split(\" <\")[0].toLowerCase();\nconst nameParts = name.split(\" \");\nconst firstName = nameParts[0];\nconst lastName = nameParts.length > 1 ? nameParts.slice(1).join(\" \") : \"\";\nconst cleanedLastName = lastName.trim();\n\n// Return the extracted dollar amount or null if not found\nreturn {\n  json: {\n    first_name: firstName,\n    last_name: cleanedLastName,\n    receivedDate: date,\n    amount: match ? match[1] : null, // The dollar amount as a string\n    source: match ? (subject.match(dollarRegex) ? \"subject\" : \"snippet\") : null, // Where it was found\n    subject: snippet + subject\n  },\n};\n"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        700,
        180
      ],
      "id": "e8e55dae-ae41-4975-a45a-c8b7aaa79791",
      "name": "Code"
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "68c06a49-f861-425b-84dd-28c6b597e5b0",
              "name": "id",
              "value": "={{ $json.id }}",
              "type": "string"
            },
            {
              "id": "9a3f7a9e-a16b-4b40-adf5-4d53ec332346",
              "name": "snippet",
              "value": "={{ $json.snippet }}",
              "type": "string"
            },
            {
              "id": "aff034fa-eee3-44ab-90d9-dd4a566eab43",
              "name": "internalDate",
              "value": "={{ $json.internalDate.toDateTime('ms').format('yyyy-MM-dd HH:mm:ss')}}",
              "type": "string"
            },
            {
              "id": "8e4514f7-33fc-4b6b-b17b-21ae17ae3827",
              "name": "From",
              "value": "={{ $json.From }}",
              "type": "string"
            },
            {
              "id": "3c2d0577-e7e3-4337-8c81-7f79e699898f",
              "name": "To",
              "value": "={{ $json.To }}",
              "type": "string"
            },
            {
              "id": "a4dd2c5f-039e-48fb-a560-095ad616e931",
              "name": "Subject",
              "value": "={{ $json.Subject }}",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        520,
        180
      ],
      "id": "0628b705-17a6-444c-ae01-c302526f9166",
      "name": "Edit Fields"
    },
    {
      "parameters": {
        "mode": "combineBySql",
        "query": "SELECT * FROM input1 LEFT JOIN input2 ON input1.first_name = input2.first_name AND input1.last_name = input2.last_name"
      },
      "type": "n8n-nodes-base.merge",
      "typeVersion": 3,
      "position": [
        1260,
        -20
      ],
      "id": "08a9cd2f-bb43-4685-a538-4b3d72b3061f",
      "name": "Merge"
    },
    {
      "parameters": {
        "type": "SHA256",
        "value": "={{ $json.payee_id }}|{{ $json.first_name }}{{ $json.last_name }}|{{ $json.receivedDate }}",
        "encoding": "base64"
      },
      "type": "n8n-nodes-base.crypto",
      "typeVersion": 1,
      "position": [
        1480,
        -20
      ],
      "id": "70848b6c-af0c-4125-ae42-d23e09f0dcfa",
      "name": "Crypto"
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "690096bf-88b8-49ce-9f13-0494d22e7207",
              "name": "transaction_id",
              "value": "={{ $json.data }}",
              "type": "string"
            },
            {
              "id": "874b2bed-169b-41e9-923c-207fdbdd7d36",
              "name": "payee_id",
              "value": "={{ $json.payee_id }}",
              "type": "string"
            },
            {
              "id": "c3f90aab-697b-482f-9261-c40c3449fa0e",
              "name": "first_name",
              "value": "={{ $json.first_name }}",
              "type": "string"
            },
            {
              "id": "b1f6549f-e32e-43ca-a2c7-d25c4c294afa",
              "name": "last_name",
              "value": "={{ $json.last_name }}",
              "type": "string"
            },
            {
              "id": "89f30ac6-1c5d-4ffb-b325-3a37f4eff1fd",
              "name": "email",
              "value": "={{ $json.email }}",
              "type": "string"
            },
            {
              "id": "5a8a74fa-27ff-49ca-a973-cad5890e47e9",
              "name": "receivedDate",
              "value": "={{ $json.receivedDate }}",
              "type": "string"
            },
            {
              "id": "8b25a8a5-3550-49c1-b79f-aab2b26c87a9",
              "name": "subject",
              "value": "={{ $json.subject }}",
              "type": "string"
            },
            {
              "id": "f20948b7-02be-466e-9304-4ecbfd5652cd",
              "name": "insertion_timestamp",
              "value": "={{ $now }}",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        1700,
        -20
      ],
      "id": "017bf500-e793-4a7e-8b52-72d1e896ac5a",
      "name": "Edit Fields1"
    },
    {
      "parameters": {},
      "type": "n8n-nodes-base.supabase",
      "typeVersion": 1,
      "position": [
        2140,
        -20
      ],
      "id": "f9011aab-e839-4f9f-bdb0-f4477b4972ca",
      "name": "Supabase",
      "credentials": {
        "supabaseApi": {
          "id": "e5AFr32MiJHSJrPC",
          "name": "Supabase account 2"
        }
      }
    },
    {
      "parameters": {
        "sortFieldsUi": {
          "sortField": [
            {
              "fieldName": "receivedDate"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.sort",
      "typeVersion": 1,
      "position": [
        1920,
        -20
      ],
      "id": "4607a977-4d6a-466e-9d00-4d3f45d1763a",
      "name": "Sort"
    }
  ],
  "pinData": {},
  "repo_name": "n8n",
  "repo_owner": "mindle99",
  "repo_path": "workflows",
  "settings": {
    "executionOrder": "v1"
  },
  "staticData": null,
  "tags": [],
  "triggerCount": 0,
  "updatedAt": "2024-12-15T15:30:39.000Z",
  "versionId": "047948ff-ff45-48f5-9f2a-409ccc9a53d1"
}